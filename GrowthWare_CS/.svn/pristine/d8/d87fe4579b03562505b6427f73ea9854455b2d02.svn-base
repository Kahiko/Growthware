using System;
using GrowthWare.Framework.BusinessLogicLayer;
using GrowthWare.Framework.Common;
using GrowthWare.Framework.Enumerations;
using GrowthWare.Framework.ModelObjects;
using System.Web;

namespace GrowthWare.Framework.Web.Utilities
{

	/// <summary>
	/// SecurityEntityUtility serves as the focal point for any web application needing to utiltize the GrowthWare framework.
	/// Web needs such as caching are handeled here
	/// </summary>
	public class SecurityEntityUtility
	{

		private string m_ProfileContextName = "ContextSecurityEntityProfile";

		private MSecurityEntityProfile m_DefaultProfile = null;

		/// <summary>
		/// Creates and returns MSecurityEntityProfile populated with information from the
		/// configuration file.
		/// </summary>
		/// <returns>MSecurityEntityProfile</returns>
		public MSecurityEntityProfile GetDefaultProfile
		{
			get
			{
				if(m_DefaultProfile == null)
				{
					MSecurityEntityProfile mDefaultProfile = new MSecurityEntityProfile();
					mDefaultProfile.Id = ConfigSettings.DefaultSecurityEntityID;
					mDefaultProfile.DAL = ConfigSettings.DAL;
					mDefaultProfile.DALNamespace = ConfigSettings.DAL_Namespace(mDefaultProfile.DAL);
					mDefaultProfile.DALAssemblyName = ConfigSettings.DAL_AssemblyName(mDefaultProfile.DAL);
					mDefaultProfile.ConnectionString = ConfigSettings.ConnectionString(mDefaultProfile.DAL);
					m_DefaultProfile = mDefaultProfile;
				}
				return m_DefaultProfile;
			}
		}

		/// <summary>
		/// Returns the current MSecurityEntityProfile from context.  If one is not found in context then 
		/// the default values from the config file will be returned.
		/// </summary>
		/// <returns>MSecurityEntityProfile</returns>
		public MSecurityEntityProfile GetCurrentProfile
		{
			get
			{
				MSecurityEntityProfile mRetProfile = this.GetDefaultProfile;
				if(HttpContext.Current != null)
				{
					if(HttpContext.Current.Items[m_ProfileContextName] != null)
					{
						mRetProfile = (MSecurityEntityProfile)HttpContext.Current.Items[m_ProfileContextName];
					}
				}
				return mRetProfile;			
			}
		}

	}

}
