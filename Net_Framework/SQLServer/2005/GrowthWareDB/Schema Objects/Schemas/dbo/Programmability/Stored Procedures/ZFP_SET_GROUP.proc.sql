CREATE PROCEDURE [ZFP_SET_GROUP] (
	@P_GROUP_SEQ_ID INT,
	@P_NAME VARCHAR(128),
	@P_DESCRIPTION VARCHAR(512),
	@P_SE_SEQ_ID INT,
	@P_ADDED_BY	INT,
	@P_ADDED_DATE DATETIME,
	@P_UPDATED_BY INT,
	@P_UPDATED_DATE DATETIME,
	@P_PRIMARY_KEY int OUTPUT,
	@P_ErrorCode int OUTPUT

) AS
	DECLARE @RLS_SEQ_ID INT
	DECLARE @MYMSG AS VARCHAR(128)
	DECLARE @now DATETIME
	SET @now = getdate()
	IF @P_GROUP_SEQ_ID > -1
		BEGIN -- UPDATE PROFILE
			UPDATE ZFC_SECURITY_GRPS
			SET 
				[NAME] = @P_NAME,
				[DESCRIPTION] = @P_DESCRIPTION,
				UPDATED_BY = @P_UPDATED_BY,
				UPDATED_DATE = @P_UPDATED_DATE
			WHERE
				GROUP_SEQ_ID = @P_GROUP_SEQ_ID

			SELECT @P_PRIMARY_KEY = @P_GROUP_SEQ_ID
		END
	ELSE
		BEGIN -- INSERT a new row in the table.
			-- CHECK FOR DUPLICATE NAME BEFORE INSERTING
			IF NOT EXISTS( SELECT [NAME] 
				   FROM ZFC_SECURITY_GRPS
				   WHERE [NAME] = @P_NAME)
				BEGIN
					INSERT ZFC_SECURITY_GRPS
					(
						[NAME],
						[DESCRIPTION],
						ADDED_BY,
						ADDED_DATE,
						UPDATED_BY,
						UPDATED_DATE
					)
					VALUES
					(
						@P_NAME,
						@P_DESCRIPTION,
						@P_ADDED_BY,
						@P_ADDED_DATE,
						@P_ADDED_BY,
						@P_ADDED_DATE
					)
					SELECT @P_PRIMARY_KEY=SCOPE_IDENTITY() -- Get the IDENTITY value for the row just inserted.
				END
			ELSE
				--PRINT 'ENTERING SECURITY INFORMATION FOR THE GROUP'
				SET @P_PRIMARY_KEY = (SELECT GROUP_SEQ_ID FROM ZFC_SECURITY_GRPS WHERE [NAME] = @P_NAME)
			-- END IF
		END
	-- END IF
	IF(SELECT COUNT(*) FROM ZFC_SECURITY_GRPS_SE WHERE SE_SEQ_ID = @P_SE_SEQ_ID AND GROUP_SEQ_ID = @P_PRIMARY_KEY) = 0 
	BEGIN  -- ADD GROUP REFERENCE TO SE_SECURITY
			INSERT ZFC_SECURITY_GRPS_SE (
				SE_SEQ_ID,
				GROUP_SEQ_ID,
				ADDED_BY,
				ADDED_DATE
			)
			VALUES (
				@P_SE_SEQ_ID,
				@P_PRIMARY_KEY,
				@P_ADDED_BY,
				@P_ADDED_DATE
			)
	END

-- Get the Error Code for the statement just executed.
SELECT @P_ErrorCode=@@ERROR
