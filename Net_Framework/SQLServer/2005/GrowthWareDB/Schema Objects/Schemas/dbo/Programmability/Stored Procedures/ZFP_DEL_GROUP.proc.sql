CREATE PROCEDURE [ZFP_DEL_GROUP] (
	@P_GROUP_SEQ_ID INT,
	@P_SE_SEQ_ID INT,
	@P_ADDUPD_BY		INT,
	@P_ErrorCode int OUTPUT
) 
AS
	/*
	NOTE : ** CASCADE DELETE SHOULD BE TURNED ON IN
		ZFC_SECURITY_GRPS_SE FOR THIS TO WORK ELSE
		THIS MIGHT THROW AN ERROR
		**** 
	*/
	DECLARE @GROUP_COUNT INT
	BEGIN TRANSACTION
		BEGIN -- DELETE GROUP FROM ZFC_SECURITY_GRPS_RLS
			DELETE ZFC_SECURITY_GRPS_RLS
			WHERE (GRPS_SE_SEQ_ID = 
						(SELECT 
							GRPS_SE_SEQ_ID 
						FROM 
							ZFC_SECURITY_GRPS_SE 
						WHERE 
							GROUP_SEQ_ID=@P_GROUP_SEQ_ID 
							AND SE_SEQ_ID = @P_SE_SEQ_ID
						)
					)
		END 

		BEGIN -- DELETE GROUP FROM ZB_SE_SECURITY
			DELETE ZFC_SECURITY_GRPS_SE
			WHERE (
				GROUP_SEQ_ID = @P_GROUP_SEQ_ID AND
				SE_SEQ_ID = @P_SE_SEQ_ID
				   )
		END
		
		BEGIN -- DELETE GROUP FROM ZFC_SECURITY_GRPS
			SET @GROUP_COUNT = (SELECT COUNT(*) FROM
						ZFC_SECURITY_GRPS,
						ZFC_SECURITY_GRPS_SE
						WHERE
						ZFC_SECURITY_GRPS.GROUP_SEQ_ID = ZFC_SECURITY_GRPS_SE.GROUP_SEQ_ID
						AND ZFC_SECURITY_GRPS.GROUP_SEQ_ID = @P_GROUP_SEQ_ID)
			-- PRINT @GROUP_COUNT -- for debug
			IF @GROUP_COUNT = 0
				BEGIN
					DELETE ZFC_SECURITY_GRPS
					WHERE (GROUP_SEQ_ID = @P_GROUP_SEQ_ID)
				END
			-- END IF
		END --  DELETE GROUP FROM ZB_GRPS
	IF @@ERROR <> 0
	 BEGIN
		-- Rollback the transaction
		ROLLBACK

		-- Raise an error and return
		RAISERROR ("Error in deleting group.", 16, 1)
		RETURN
	 END
	COMMIT
