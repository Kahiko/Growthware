CREATE PROCEDURE [ZFP_DEL_ROLE] (
	@P_ROLE_NAME				NVARCHAR(25),
	@P_SECURITY_ENTITY_SEQ_ID	INT,
	@P_ADDUPD_BY				INT,
	@P_ErrorCode				int OUTPUT,
	@P_ISVALID					NVARCHAR(50)  OUTPUT
) 
AS
	/*
	NOTE : ** CASCADE DELETE SHOULD BE TURNED ON IN
		ZFC_SECURITY_RLS_SE FOR THIS TO WORK ELSE
		THIS MIGHT THROW AN ERROR
		**** 
	*/
	DECLARE @ROLE_SEQ_ID INT
			
	SET @ROLE_SEQ_ID = (SELECT ROLE_SEQ_ID FROM ZFC_SECURITY_RLS WHERE [NAME] = @P_ROLE_NAME)

	BEGIN TRANSACTION
		BEGIN -- DELETE ROLE FROM ZFC_SECURITY_GRPS_RLS
			DELETE ZFC_SECURITY_GRPS_RLS
			WHERE (RLS_SE_SEQ_ID = 
						(SELECT 
							RLS_SE_SEQ_ID 
						FROM 
							ZFC_SECURITY_RLS_SE 
						WHERE 
							ROLE_SEQ_ID=@ROLE_SEQ_ID 
							AND SE_SEQ_ID = @P_SECURITY_ENTITY_SEQ_ID
						)
					)
		END 

		BEGIN -- DELETE ROLE FROM ZFC_SE_SECURITY
			DELETE ZFC_SECURITY_RLS_SE
			WHERE (
				ROLE_SEQ_ID = @ROLE_SEQ_ID AND
				SE_SEQ_ID = @P_SECURITY_ENTITY_SEQ_ID
				   )
		END 
		BEGIN -- DELETE ROLE FROM ZFC_SECURITY_RLS
			IF (SELECT COUNT(*) FROM
				ZFC_SECURITY_RLS,
				ZFC_SECURITY_RLS_SE
				WHERE
				ZFC_SECURITY_RLS.ROLE_SEQ_ID = ZFC_SECURITY_RLS_SE.ROLE_SEQ_ID
				AND ZFC_SECURITY_RLS.ROLE_SEQ_ID = @ROLE_SEQ_ID) = 0
			BEGIN
				DELETE ZFC_SECURITY_RLS
				WHERE (ROLE_SEQ_ID = @ROLE_SEQ_ID)
			END
		END --  DELETE ROLE FROM ZB_RLS
	IF @@ERROR <> 0
	 BEGIN
		-- Rollback the transaction
		ROLLBACK

		-- Raise an error and return
		RAISERROR ("Error in deleting department in DeleteDepartment.", 16, 1)
		SET @P_ISVALID = 0
		RETURN
	 END
	COMMIT
	SET @P_ISVALID = 1
	RETURN @P_ISVALID
