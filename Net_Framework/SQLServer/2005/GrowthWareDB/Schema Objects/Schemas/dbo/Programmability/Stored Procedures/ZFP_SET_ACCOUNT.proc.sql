CREATE PROCEDURE [ZFP_SET_ACCOUNT]
	@P_ACCT_SEQ_ID int,
	@P_STATUS_SEQ_ID int,
	@P_ACCOUNT VARCHAR(128),
	@P_FIRST_NAME VARCHAR(15),
	@P_LAST_NAME VARCHAR(15),
	@P_MIDDLE_NAME VARCHAR(15),
	@P_PREFERED_NAME VARCHAR(50),
	@P_EMAIL VARCHAR(128),
	@P_PWD VARCHAR(256),
	@P_PASSWORD_LAST_SET datetime,
	@P_FAILED_ATTEMPTS int,
	@P_ADDED_BY int,
	@P_ADDED_DATE datetime,
	@P_LAST_LOGIN datetime,
	@P_TIME_ZONE int,
	@P_LOCATION VARCHAR(50),
	@P_ENABLE_NOTIFICATIONS int,
	@P_IS_SYSTEM_ADMIN int,
	@P_UPDATED_BY int,
	@P_UPDATED_DATE datetime,
	@P_PRIMARY_KEY int OUTPUT,
	@P_ErrorCode int OUTPUT
AS
	DECLARE @SECURITY_ENTITY_SEQ_ID VARCHAR(1),
		@Security_Entity_NAME VARCHAR(50),
		@BACK_COLOR VARCHAR(15),
		@LEFT_COLOR VARCHAR(15),
		@HEAD_COLOR VARCHAR(15),
		@SUB_HEAD_COLOR VARCHAR(15),
		@COLOR_SCHEME VARCHAR(15),
		@THIN_ACTIONS VARCHAR(256),
		@WIDE_ACTIONS VARCHAR(256),
		@MODULE_ACTION VARCHAR(25),
		@RECORDS_PER_PAGE VARCHAR(1000),
		@DEFAULT_ACCOUNT VARCHAR(50)
	
	
	IF @P_ACCT_SEQ_ID > -1
		BEGIN -- UPDATE PROFILE
			UPDATE ZFC_ACCTS
			SET 
				STATUS_SEQ_ID = @P_STATUS_SEQ_ID,
				ACCT = @P_ACCOUNT,
				FIRST_NAME = @P_FIRST_NAME,
				LAST_NAME = @P_LAST_NAME,
				MIDDLE_NAME = @P_MIDDLE_NAME,
				PREFERED_NAME = @P_PREFERED_NAME,
				EMAIL = @P_EMAIL,
				PASSWORD_LAST_SET = @P_Password_Last_Set,
				PWD = @P_PWD,
				FAILED_ATTEMPTS = @P_FAILED_ATTEMPTS,
				ADDED_BY = @P_ADDED_BY,
				ADDED_DATE = @P_ADDED_DATE,
				LAST_LOGIN = @P_LAST_LOGIN,
				TIME_ZONE = @P_TIME_ZONE,
				LOCATION = @P_LOCATION,
				IS_SYSTEM_ADMIN = @P_IS_SYSTEM_ADMIN,
				ENABLE_NOTIFICATIONS = @P_ENABLE_NOTIFICATIONS,
				UPDATED_BY = @P_UPDATED_BY,
				UPDATED_DATE = @P_UPDATED_DATE
			WHERE
				ACCT_SEQ_ID = @P_ACCT_SEQ_ID

			SET @P_PRIMARY_KEY = @P_ACCT_SEQ_ID
		END
	ELSE
		BEGIN -- INSERT a new row in the table.
			SET NOCOUNT ON
			INSERT ZFC_ACCTS
			(
				STATUS_SEQ_ID,
				ACCT,
				FIRST_NAME,
				LAST_NAME,
				MIDDLE_NAME,
				PREFERED_NAME,
				EMAIL,
				PASSWORD_LAST_SET,
				PWD,
				FAILED_ATTEMPTS,
				IS_SYSTEM_ADMIN,
				ADDED_BY,
				ADDED_DATE,
				LAST_LOGIN,
				TIME_ZONE,
				LOCATION,
				ENABLE_NOTIFICATIONS,
				UPDATED_BY,
				UPDATED_DATE
			)
			VALUES
			(
				@P_STATUS_SEQ_ID,
				@P_ACCOUNT,
				@P_FIRST_NAME,
				@P_LAST_NAME,
				@P_MIDDLE_NAME,
				@P_PREFERED_NAME,
				@P_EMAIL,
				@P_PASSWORD_LAST_SET,
				@P_PWD,
				@P_FAILED_ATTEMPTS,
				@P_IS_SYSTEM_ADMIN,
				@P_ADDED_BY,
				@P_ADDED_DATE,
				@P_LAST_LOGIN,
				@P_TIME_ZONE,
				@P_LOCATION,
				@P_ENABLE_NOTIFICATIONS,
				@P_UPDATED_BY,
				@P_UPDATED_DATE
			)
			SELECT @P_PRIMARY_KEY = SCOPE_IDENTITY()-- Get the IDENTITY value for the row just inserted.
		
			IF @P_PRIMARY_KEY > 0 
			BEGIN
				/*add an entry to account choice table*/
				IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[ZFO_ACCT_CHOICES]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)		
				BEGIN
					SELECT @DEFAULT_ACCOUNT=ACCT FROM ZFC_ACCTS WHERE ACCT_SEQ_ID = @P_UPDATED_BY
					
					IF @DEFAULT_ACCOUNT= NULL SET @DEFAULT_ACCOUNT = 'ANONYMOUS'

					SELECT -- FILL THE DEFAULT VALUES
						@SECURITY_ENTITY_SEQ_ID = SE_SEQ_ID,
						@Security_Entity_NAME = SE_NAME,
						@BACK_COLOR = BACK_COLOR,
						@LEFT_COLOR = LEFT_COLOR,
						@HEAD_COLOR = HEAD_COLOR,
						@SUB_HEAD_COLOR = SUB_HEAD_COLOR,
						@COLOR_SCHEME = COLOR_SCHEME,
						@MODULE_ACTION = FAVORIATE_ACTION,
						@THIN_ACTIONS = THIN_ACTIONS,
						@WIDE_ACTIONS = WIDE_ACTIONS,
						@RECORDS_PER_PAGE = RECORDS_PER_PAGE
					FROM
						ZFO_ACCT_CHOICES
					WHERE 
						ACCT = @DEFAULT_ACCOUNT

					EXEC ZFP_SET_ACCT_CHOICES
						@P_ACCOUNT,
						@SECURITY_ENTITY_SEQ_ID,
						@Security_Entity_NAME,
						@BACK_COLOR,
						@LEFT_COLOR,
						@HEAD_COLOR,
						@SUB_HEAD_COLOR,
						@COLOR_SCHEME ,
						@MODULE_ACTION,
						@THIN_ACTIONS,
						@WIDE_ACTIONS,
						@RECORDS_PER_PAGE
				END
			END
		END-- Get the Error Code for the statement just executed.

SELECT @P_ErrorCode=@@ERROR
