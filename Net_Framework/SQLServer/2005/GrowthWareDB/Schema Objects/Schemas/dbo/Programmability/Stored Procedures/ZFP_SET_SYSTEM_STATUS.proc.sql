CREATE PROCEDURE [ZFP_SET_SYSTEM_STATUS]
	@P_STATUS_SEQ_ID int,
	@P_DESCRIPTION VARCHAR(25),
	@P_ADDED_BY int,
	@P_ADDED_DATE datetime,
	@P_UPDATED_BY int,
	@P_UPDATED_DATE datetime,
	@P_PRIMARY_KEY int OUTPUT,
	@P_ErrorCode int OUTPUT
AS
	IF @P_STATUS_SEQ_ID > -1
		BEGIN -- UPDATE PROFILE
			UPDATE ZFC_SYSTEM_STATUS
			SET 
				[DESCRIPTION] = @P_DESCRIPTION,
				ADDED_BY = @P_ADDED_BY,
				ADDED_DATE = @P_ADDED_DATE,
				UPDATED_BY = @P_UPDATED_BY,
				UPDATED_DATE = @P_UPDATED_DATE
			WHERE
				STATUS_SEQ_ID = @P_STATUS_SEQ_ID

			SELECT @P_PRIMARY_KEY = @P_STATUS_SEQ_ID
		END
	ELSE
	BEGIN -- INSERT a new row in the table.

			-- CHECK FOR DUPLICATE NAME BEFORE INSERTING
			IF EXISTS( SELECT STATUS_SEQ_ID 
				   FROM ZFC_SYSTEM_STATUS
				   WHERE STATUS_SEQ_ID = @P_STATUS_SEQ_ID
			)
			BEGIN
				RAISERROR ('THE STATUS YOU ENTERED ALREADY EXISTS IN THE DATABASE.',16,1)
				RETURN
			END

			INSERT ZFC_SYSTEM_STATUS
			(
				[DESCRIPTION],
				ADDED_BY ,
				ADDED_DATE ,
				UPDATED_BY ,
				UPDATED_DATE 
			)
			VALUES
			(
				@P_DESCRIPTION,
				@P_ADDED_BY ,
				@P_ADDED_DATE ,
				@P_UPDATED_BY ,
				@P_UPDATED_DATE
			)
			SELECT @P_STATUS_SEQ_ID = SCOPE_IDENTITY() -- Get the IDENTITY value for the row just inserted.
		END
-- Get the Error Code for the statement just executed.
SELECT @P_ErrorCode=@@ERROR
