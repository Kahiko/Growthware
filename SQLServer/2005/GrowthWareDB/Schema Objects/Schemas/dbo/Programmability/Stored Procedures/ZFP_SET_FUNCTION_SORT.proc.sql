CREATE PROCEDURE [ZFP_SET_FUNCTION_SORT] (
	@P_FUNCTION_SEQ_ID INT,
	@P_DIRECTION INT,
	@P_UPDATED_BY INT,
	@P_UPDATED_DATE DATETIME,
	@P_PRIMARY_KEY int OUTPUT,
	@P_ErrorCode int OUTPUT

) AS
	DECLARE @V_SORT_ORDER_CURRENT int
	DECLARE @V_SORT_ORDER_MOVE int
	DECLARE @V_PARENT_FUNCTION_SEQ_ID INT
	-- Get the parent ID so only the menu items here can be effected
	SET @V_PARENT_FUNCTION_SEQ_ID = (SELECT PARENT_FUNCTION_SEQ_ID FROM ZFC_FUNCTIONS WHERE FUNCTION_SEQ_ID = @P_FUNCTION_SEQ_ID)
	-- Get Current Sort Order
	SELECT 
		@V_SORT_ORDER_CURRENT = SORT_ORDER
	FROM ZFC_FUNCTIONS
	WHERE FUNCTION_SEQ_ID = @P_FUNCTION_SEQ_ID
	
	-- Get Sort Order for Section Above
	IF @P_DIRECTION = 0 -- Down
		BEGIN
			SELECT @V_SORT_ORDER_MOVE = MIN( SORT_ORDER )
			FROM ZFC_FUNCTIONS
			WHERE SORT_ORDER > @V_SORT_ORDER_CURRENT
		END
	ELSE -- up
		BEGIN
			SELECT @V_SORT_ORDER_MOVE = MAX( SORT_ORDER )
			FROM ZFC_FUNCTIONS
			WHERE SORT_ORDER < @V_SORT_ORDER_CURRENT
		END
	-- END IF
	-- If no row to move, exit
	IF @V_SORT_ORDER_MOVE IS NULL
		return
	
	-- Otherwise, switch sort orders
	UPDATE ZFC_FUNCTIONS SET
	  SORT_ORDER = @V_SORT_ORDER_CURRENT
	  WHERE SORT_ORDER = @V_SORT_ORDER_MOVE
	
	UPDATE ZFC_FUNCTIONS SET
	  SORT_ORDER = @V_SORT_ORDER_MOVE,
	  UPDATED_BY = @P_UPDATED_BY,
	  UPDATED_DATE = @P_UPDATED_DATE
	  WHERE FUNCTION_SEQ_ID = @P_FUNCTION_SEQ_ID
