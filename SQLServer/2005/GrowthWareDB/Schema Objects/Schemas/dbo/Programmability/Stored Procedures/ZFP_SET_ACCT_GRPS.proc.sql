CREATE PROCEDURE [ZFP_SET_ACCT_GRPS](
	@P_ACCT VARCHAR(128),
	@P_SE_SEQ_ID INT,
	@P_GROUPS VARCHAR(1000),
	@P_ADDUPD_BY INT,
	@P_ErrorCode int OUTPUT
)
 AS
BEGIN TRAN
	DECLARE @ACCT_SEQ_ID INT
	SET @ACCT_SEQ_ID = (SELECT ACCT_SEQ_ID FROM ZFC_ACCTS WHERE ACCT = @P_ACCT)
	-- NEED TO DELETE EXISTING GROUP ASSOCITAED WITH THE ACCOUNT BEFORE 
	-- INSERTING NEW ONES.
	EXEC ZFP_DEL_ACCT_GRP_SECURITY @ACCT_SEQ_ID,@P_SE_SEQ_ID,@P_ADDUPD_BY,@P_ErrorCode
	SELECT @P_ErrorCode = @@error
	DECLARE @V_GROUP_SEQ_ID 		AS 	INT
	DECLARE @V_SE_GRPS_SECURITY_ID 	AS 	INT
	DECLARE @V_GROUP_NAME		AS	VARCHAR(50)
	DECLARE @V_Pos 			AS	INT
	SET @P_GROUPS = LTRIM(RTRIM(@P_GROUPS))+ ','
	SET @V_Pos = CHARINDEX(',', @P_GROUPS, 1)
	IF LEN(REPLACE(@P_GROUPS, ',', '')) > 0
		WHILE @V_Pos > 0
		BEGIN
			SET @V_GROUP_NAME = LTRIM(RTRIM(LEFT(@P_GROUPS, @V_Pos - 1)))
			IF @V_GROUP_NAME <> ''
			BEGIN
				--select the GROUP seq id first
				SELECT @V_GROUP_SEQ_ID = ZFC_SECURITY_GRPS.GROUP_SEQ_ID 
				FROM ZFC_SECURITY_GRPS 
				WHERE [NAME]=@V_GROUP_NAME

 				SELECT
					@V_SE_GRPS_SECURITY_ID=GRPS_SE_SEQ_ID
				FROM
					ZFC_SECURITY_GRPS_SE
				WHERE
					GROUP_SEQ_ID = @V_GROUP_SEQ_ID AND
					SE_SEQ_ID = @P_SE_SEQ_ID
					--PRINT('@V_SE_GRPS_SECURITY_ID = ' + CONVERT(VARCHAR,@V_SE_GRPS_SECURITY_ID))
				IF NOT EXISTS(
						SELECT 
							GRPS_SE_SEQ_ID 
						FROM 
							ZFC_SECURITY_ACCTS_GRPS 
						WHERE 
						ACCT_SEQ_ID = @ACCT_SEQ_ID 
						AND GRPS_SE_SEQ_ID = @V_SE_GRPS_SECURITY_ID
				)
				BEGIN
					--PRINT('INSERT RECORD')
					INSERT ZFC_SECURITY_ACCTS_GRPS (
						ACCT_SEQ_ID,
						GRPS_SE_SEQ_ID,
						ADDED_BY
					)
					VALUES (
						@ACCT_SEQ_ID,
						@V_SE_GRPS_SECURITY_ID,
						@P_ADDUPD_BY
					)
				END
		
			END
				SET @P_GROUPS = RIGHT(@P_GROUPS, LEN(@P_GROUPS) - @V_Pos)
				SET @V_Pos = CHARINDEX(',', @P_GROUPS, 1)
			SELECT @P_ErrorCode = @@error
		END
	IF @P_ErrorCode <> 0 GOTO ABEND
COMMIT TRAN
	ABEND:
IF @P_ErrorCode <> 0
	BEGIN
		PRINT 'Yikes!'
		ROLLBACK TRAN
	END
