CREATE PROCEDURE [ZFP_GET_ROLE] 
	@P_ROLE_SEQ_ID INT,
	@P_SE_SEQ_ID INT,
	@P_ErrorCode INT OUTPUT
AS
	SET NOCOUNT ON
	IF @P_ROLE_SEQ_ID > -1 -- SELECT an existing row from the table.
		SELECT
			ZFC_SECURITY_RLS.[ROLE_SEQ_ID],
			ZFC_SECURITY_RLS.[NAME],
			ZFC_SECURITY_RLS.[DESCRIPTION],
			ZFC_SECURITY_RLS.[IS_SYSTEM],
			ZFC_SECURITY_RLS.[IS_SYSTEM_ONLY],
			ZFC_SECURITY_RLS.[ADDED_BY],
			ZFC_SECURITY_RLS.[ADDED_DATE],
			ZFC_SECURITY_RLS.[UPDATED_BY],
			ZFC_SECURITY_RLS.[UPDATED_DATE]
		FROM
			ZFC_SECURITY_RLS
		WHERE
			ROLE_SEQ_ID = @P_ROLE_SEQ_ID
	ELSE -- GET ALL ROLES FOR A GIVEN Security Entity
		SELECT
			ZFC_SECURITY_RLS.[ROLE_SEQ_ID],
			ZFC_SECURITY_RLS.[NAME],
			ZFC_SECURITY_RLS.[DESCRIPTION],
			ZFC_SECURITY_RLS.[IS_SYSTEM],
			ZFC_SECURITY_RLS.[IS_SYSTEM_ONLY],
			ZFC_SECURITY_RLS.[ADDED_BY],
			ZFC_SECURITY_RLS.[ADDED_DATE],
			ZFC_SECURITY_RLS.[UPDATED_BY],
			ZFC_SECURITY_RLS.[UPDATED_DATE]
		FROM
			ZFC_SECURITY_RLS,
			ZFC_SECURITY_RLS_SE
		WHERE
			ZFC_SECURITY_RLS.ROLE_SEQ_ID = ZFC_SECURITY_RLS_SE.ROLE_SEQ_ID
			AND ZFC_SECURITY_RLS_SE.SE_SEQ_ID = @P_SE_SEQ_ID
	-- END IF		
	-- Get the Error Code for the statement just executed.
	SELECT @P_ErrorCode=@@ERROR