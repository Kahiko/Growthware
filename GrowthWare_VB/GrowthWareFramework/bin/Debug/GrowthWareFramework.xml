<?xml version="1.0"?>
<doc>
<assembly>
<name>
GrowthWareFramework
</name>
</assembly>
<members>
<member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2000.DAccount.GetSecurity(System.String@,System.Int32@)">
	<summary>
 Returns a data table of all roles assigned directly and/or by group
 </summary>
	<param name="account">String</param>
	<param name="SecurityEntityID">Integer</param>
	<returns>DataTable</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2000.DAccount.Save">
	<summary>
 Inserts or updates account information
 </summary>
	<returns>DataRow</returns>
	<remarks>
	</remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2000.DAccount.GetAccount">
	<summary>
 Retruns a DataRow of account
 </summary>
	<returns>DataRow</returns>
	<remarks>Usefull for populating MAccountProfile</remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2000.DAccount.GetAccounts">
	<summary>
 Retruns a table of accounts given IS_SYSTEM_ADMIN, Security Entity
 </summary>
	<returns>DataTable</returns>
	<remarks>IS_SYSTEM_ADMIN is a property of the Profile and Security Entity is the SE_SEQ_ID property</remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.EncryptionType">
	<summary>
 Enumeration of Encryption Types
 </summary>
	<remarks>
	</remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MClientChoices">
	<summary>
 All propertyies represent the column names in the ZF_ACCT_CHOICES table.
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MRoleProfile.#ctor">
	<summary>
 Will return a message profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.DataAccessLayer.Interfaces.Base.IDBInteraction.ConnectionString">
	<summary>
 Sets or Gets the connection string information.
 </summary>
	<value>String</value>
	<returns>String</returns>
	<remarks>Can not be blank</remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MFunctionTypeProfile.#ctor">
	<summary>
 Will return a Function profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MFunctionTypeProfile.#ctor(System.Data.DataRow)">
	<summary>
 Will return a fully populated Function type profile.
 </summary>
	<param name="drowProfile">A data row containing the Function type information</param>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MNameValuePair.#ctor">
	<summary>
 Provides a new account profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MNameValuePair.#ctor(System.Data.DataRow)">
	<summary>
 Will populate values based on the contents of the data row.
 </summary>
	<param name="dr">Datarow containing base values</param>
	<remarks>
 Class should be inherited to extend to your project specific properties
 </remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MNameValuePair">
	<summary>
 Base properties a name value pair
 </summary>
	<remarks>
 Corresponds to table ZFC_NVP and 
 Store procedures: 
 ZFP_SET_NVP, ZFP_GET_NVP
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MSecurityEntityProfile.#ctor">
	<summary>
 Will return a account profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MSecurityEntityProfile.#ctor(System.Data.DataRow)">
	<summary>
 Will populate values based on the contents of the data row.
 </summary>
	<param name="dr">Datarow containing base values</param>
	<remarks>
 Class should be inherited to extend to your project specific properties
 </remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2008.DAccounts.GetSecurity(System.String@,System.Int32@)">
	<summary>
 Returns a data table of all roles assigned directly and/or by group
 </summary>
	<param name="account">String</param>
	<param name="SecurityEntityID">Integer</param>
	<returns>DataTable</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2008.DAccounts.Save">
	<summary>
 Inserts or updates account information
 </summary>
	<returns>DataRow</returns>
	<remarks>
	</remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.V2008.DAccounts.GetAccount">
	<summary>
 Retruns a DataRow of account
 </summary>
	<returns>DataRow</returns>
	<remarks>Usefull for populating MAccountProfile</remarks>
</member><member name="F:GrowthWare.Framework.Enumerations.AllowHtml.None">
	<summary>
 No Html Edit is allowed
 </summary>
	<remarks></remarks>
</member><member name="F:GrowthWare.Framework.Enumerations.AllowHtml.Limited">
	<summary>
 Limited Html Edit is allowed
 </summary>
	<remarks></remarks>
</member><member name="F:GrowthWare.Framework.Enumerations.AllowHtml.Full">
	<summary>
 Full Html Edit is allowed
 </summary>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.AllowHtml">
	<summary>
 Enumeration of allow html
 </summary>
	<remarks>
	</remarks>
</member><member name="P:GrowthWare.Framework.Common.ConfigSettings.AlwaysLeftNav">
	<summary>
 Retruns Always_Left_Nav from the WEB.CONFIG file
 </summary>
	<value></value>
	<returns>Boolean</returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.Common.ConfigSettings.AppDisplayedName">
	<summary>
 Retruns App_Displayed_Name from the WEB.CONFIG file
 </summary>
	<value></value>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.Common.ConfigSettings.AppendToFile">
	<summary>
 Retruns Append_To_File from the WEB.CONFIG file
 </summary>
	<value></value>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.Common.ConfigSettings.AppPath">
	<summary>
 Returns the application path
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.Common.ConfigSettings.ConnectionString(System.String)">
	<summary>
 Returns the connection string as defined in the web.conf file by environment/DAL
 </summary>
	<param name="dataAccessLayer">String</param>
	<value>Desired data access layer "Oracle" and defaul "SQLServer" connection string information</value>
	<returns>String</returns>
	<remarks>The web.conf value can be encrypted or clear text</remarks>
</member><member name="P:GrowthWare.Framework.Common.ConfigSettings.DAL_AssemblyName(System.String)">
	<summary>
 Returns the name of the data access layer assembly name as defined in the web.conf file by environment
 </summary>
	<param name="dataAccessLayer">String</param>
	<value>Desired data access layer "Oracle" and default "SQLServer"</value>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.IAccount.Delete">
	<summary>
 Deletes an account
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.formatError(System.Data.SqlClient.SqlParameter[],System.String,System.String)">
	<summary>
 Formats a an error message containing the stored procedure name and the sqlparameter/values.
 </summary>
	<param name="SQLParameters">SqlParameter</param>
	<param name="StoredProcedure">StoredProcedure</param>
	<param name="YourExMSG">YourExMSG</param>
	<returns>String</returns>
	<remarks>Used when a DB error occures</remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.isValid">
	<summary>
 Ensures m_ConnectionString has a value.
 </summary>
	<remarks>Throws ArgumentException</remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.executeNonQuery(System.String@,System.Data.SqlClient.SqlParameter[]@)">
	<summary>
 Executes a non Query given the store procedure and sql parameters
 </summary>
	<param name="StoreProcedure">String</param>
	<param name="SQLParameters">SqlParmeter</param>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.getDataSet(System.String@,System.Data.SqlClient.SqlParameter[]@)">
	<summary>
 Returns a DataSet given the store procedure and sql parameters
 </summary>
	<param name="StoreProcedure">String</param>
	<param name="SQLParameters">SqlParmeter</param>
	<returns>DataSet</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.getDataTable(System.String@,System.Data.SqlClient.SqlParameter[]@)">
	<summary>
 Returns a DataTable given the store procedure and sql parameters
 </summary>
	<param name="StoreProcedure">String</param>
	<param name="SQLParameters">SqlParameter</param>
	<returns>DataTable</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.getDataRow(System.String@,System.Data.SqlClient.SqlParameter[]@)">
	<summary>
 Returns a DataRow given the store procedure and sql parameters
 </summary>
	<param name="StoreProcedure">Stirng</param>
	<param name="SQLParameters">SqlParameter</param>
	<returns>DataRow</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.getParameterValue(System.String,System.Data.SqlClient.SqlParameter[]@)">
	<summary>
 Returns the value of an output parameter given the parameter name and an array of SqlParameters
 </summary>
	<param name="ParameterName">ParameterName</param>
	<param name="SQLParameters">SqlParameter</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.getSqlParameter(System.String,System.Object,System.Data.ParameterDirection)">
	<summary>
 Retruns a SqlParameter given the ParameterName, ParameterValue and Direction.
 </summary>
	<param name="ParameterName">String</param>
	<param name="ParameterValue">Object</param>
	<param name="Direction">ParameterDirection</param>
	<returns>SqlParameter</returns>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.getAddedUpdatedBy(GrowthWare.Framework.ModelObjects.Base.Interfaces.IProfile@)">
	<summary>
 Returns the correct integer for added or updated by
 </summary>
	<param name="Profile">Object implementing IProfile</param>
	<returns>int</returns>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.Dispose(System.Boolean)">
	<summary>
 Implements IDispose
 </summary>
	<param name="disposing">Boolean</param>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction.Dispose">
	<summary>
 Implements Dispose
 </summary>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.DataAccessLayer.SQLServer.Base.DDBInteraction">
	<summary>
 Performs all data store interaction to SQL Server through the use of stored procedures only.
 </summary>
	<remarks>Uses MS best pratices for underlying database access.</remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MSecurity.Init(System.Data.DataRow@,System.Data.DataRow[]@)">
	<summary>
 Init orverloads and calles mybase.init to will populate the Add, Delete, Edit, and View role properties.
 </summary>
	<param name="drowSecurity">A data row that must contain two columns ("PERMISSIONS_SEQ_ID","ROLE")</param>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MSecurity">
	<summary>
 The MBaseSecurity is a abstract class that when inherited will add 4 types of roles
 to your class/object.  After you have inherited the class pass a data row to the SecurityInit sub 
 to populate the roles.
 </summary>
	<remarks>
 Currently there are 4 permission roles and they are Add, Edit, View, Delete.  
 If you would like to extend this class do so by inheriting this class and adding your
 own types of roles say Moderate if your writing some sort of formum type of class.
 Any of the objects you create should now inherit your class and will now have all of the 
 roles from this class as well as the ones for yours.
</remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.Base.Interfaces.IProfile">
	<summary>
 Ensures the basic properties are avalible to all Profile model objects.
 </summary>
	<remarks>
 If it is decided to use entities in the future then
 this interface should be used for the save, delete, and getitem methods.
  </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MNotificationsProfile.#ctor">
	<summary>
 Provides a new account profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.Common.FactoryObject.Create(System.String,System.String,System.String)">
	<summary>
 Creates an instance of an object.
 </summary>
	<param name="theAssemblyName">
 The name of the assembley (DLL).  Must be 
 included in your solution in order to find the file.
 </param>
	<param name="TheNamespace">
 The name space where the class is located.
 </param>
	<param name="TheClassName">
 The name of the class you need an instance of.
 </param>
	<returns>An object</returns>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.Common.FactoryObject">
	<summary>
 The FactoryObject will create an instance of an object from any 
 Assembley give the assembly name, namespace, and the object/class name.
 </summary>
	<remarks>
 None
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.Base.MProfile.Init(System.Data.DataRow@)">
	<summary>
 Initializes values given a DataRow
 </summary>
	<param name="dr">DataRow</param>
</member><member name="M:GrowthWare.Framework.ModelObjects.Base.MProfile.setBool(System.Boolean@,System.String@,System.Data.DataRow@)">
	<summary>
 Returns a boolean from a datarow.
 </summary>
	<param name="dr">DataRow</param>
	<param name="columnName">Name of the column to retrieve from the data row</param>
</member><member name="M:GrowthWare.Framework.ModelObjects.Base.MProfile.setDate(System.DateTime@,System.String@,System.Data.DataRow@,System.DateTime)">
	<summary>
 Returns a date time object from a datarow.
 </summary>
	<param name="dr">DataRow</param>
	<param name="columnName">Name of the column to retrieve from the data row</param>
	<param name="defaultDateTime">Date time object used as default</param>
</member><member name="T:GrowthWare.Framework.ModelObjects.Base.MProfile">
	<summary>
 Contains all profile base properties
 </summary>
	<remarks></remarks>
</member><member name="F:GrowthWare.Framework.Enumerations.AppenderType.File">
	<summary>
 File type
 </summary>
	<remarks></remarks>
</member><member name="F:GrowthWare.Framework.Enumerations.AppenderType.DataBase">
	<summary>
 Database type
 </summary>
	<remarks></remarks>
</member><member name="F:GrowthWare.Framework.Enumerations.AppenderType.EMail">
	<summary>
 EMail
 </summary>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.AppenderType">
	<summary>
 Enumeration of Log4Net appenders
 </summary>
	<remarks>
	</remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.GroupType">
	<summary>
 Enumerates all role types.
 </summary>
	<remarks>
 Closely coupled with table ZFC_FUNCTION_TYPES.
 </remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.SystemStatus">
	<summary>
 Enumeration of system status
 </summary>
	<remarks>
 Values match ZF_SYSTEM_STATUS in the database
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MAccountProfile.#ctor">
	<summary>
 Provides a new account profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MAccountProfile.#ctor(System.Data.DataRow)">
	<summary>
 Will populate values based on the contents of the data row.
 </summary>
	<param name="dr">Datarow containing base values</param>
	<remarks>
 Class should be inherited to extend to your project specific properties
 </remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MAccountProfile">
	<summary>
 Base properties an account Profile
 </summary>
	<remarks>
 Corresponds to table ZF_ACCTS and 
 Store procedures: 
 ZFP_SET_ACCOUNT, ZFP_GET_ACCOUNT
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MGroupProfile.#ctor">
	<summary>
 Will return a message profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MWorkFlowProfile.#ctor">
	<summary>
 Will return a workflow profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.DirectionType">
	<summary>
 Enumeration of Direction Types
 </summary>
	<remarks>
 Used for indicating to move a sort order (up/down).
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MDirectoryProfile.#ctor">
	<summary>
 Will return a directory profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.BusinessLogicLayer.BAccounts.#ctor">
	<summary>
 Private sub new() to ensure only new instances with passed parameters is used.
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.BusinessLogicLayer.BAccounts.#ctor(GrowthWare.Framework.ModelObjects.MSecurityEntityProfile@)">
	<summary>
 Parameters are need to pass along to the factory for correct connection to the desired datastore.
 </summary>
	<param name="SecurityEntityProfile">The Security Entity profile used to obtain the DAL name, DAL name space, and the Connection String</param>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.BusinessLogicLayer.BAccounts.Save(GrowthWare.Framework.ModelObjects.MAccountProfile@)">
	<summary>
 Performs either insert or update of an MAcountProfile.
 </summary>
	<param name="Profile">MAccountProfile</param>
	<remarks>
 Updates the model object with information from the database<br></br>
 For example if you are creating a new account the ID will be sent into<br></br>
 this method as -1, after the call to this method the ID will from the database
 </remarks>
	<example> This sample shows how to create an instance of the class.
 <code language="VB.NET">
			<![CDATA[
 Dim myBll as new BAccounts(mySecurityEntityProfile)
 ]]>
		</code>
		<code language="C#">
		</code>
	</example>
</member><member name="T:GrowthWare.Framework.Enumerations.PermissionType">
	<summary>
 Enumeration of permission Types
 </summary>
	<remarks>
 Values match ZF_PERMISSIONS in the database
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MMessageProfile.#ctor">
	<summary>
 Will return a message profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:GrowthWare.Framework.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:GrowthWare.Framework.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:GrowthWare.Framework.ModelObjects.ExtendedAccountProfile">
	<summary>
 Example of using inheritence to extend the base AccountProfile
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.Encrypt(System.String,GrowthWare.Framework.Enumerations.EncryptionType)">
	<summary>
 Performs encryption given the desired encryption type.
 </summary>
	<param name="value">String to encrypt</param>
	<param name="encryptionType">If "TripleDES" is not specified the DES is returned.</param>
	<returns>Encrypted string</returns>
	<remarks>encryptionType is case sensitive.</remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.Encrypt(System.String,GrowthWare.Framework.Enumerations.EncryptionType,System.String)">
	<summary>
 Performs encryption given the desired encryption type.
 </summary>
	<param name="value">String to encrypt</param>
	<param name="encryptionType">If "TripleDES" is not specified the DES is returned.</param>
	<returns>Encrypted string</returns>
	<remarks>encryptionType is case sensitive.</remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.Decrypt(System.String,GrowthWare.Framework.Enumerations.EncryptionType)">
	<summary>
 Performs dencryption.
 </summary>
	<param name="value">Encrypted string</param>
	<param name="encryptionType">If "TripleDES" is not specified the DES is returned.</param>
	<returns>Decrypted string</returns>
	<remarks>encryptionType is case sensitive</remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.Decrypt(System.String,GrowthWare.Framework.Enumerations.EncryptionType,System.String)">
	<summary>
 Performs dencryption.
 </summary>
	<param name="value">Encrypted string</param>
	<param name="encryptionType">If "TripleDES" is not specified the DES is returned.</param>
	<returns>Decrypted string</returns>
	<remarks>encryptionType is case sensitive</remarks>
</member><member name="P:GrowthWare.Framework.Common.CryptoUtility.SetKeys">
	<summary> 
 SetKeys will create a 192 bit key and 64 bit IV based on 
 two MD5 methods found in another article (http://www.aspalliance.com/535) 
 </summary>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.MD5Encryption(System.String)">
	<summary>
 Encrypts the string to a byte array using the MD5 Encryption Algorithm.
 <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider"/>
	</summary>
	<param name="ToEncrypt">System.String.  Usually a password.</param>
	<returns>System.Byte[]</returns>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.MD5SaltedHashEncryption(System.String)">
	<summary> 
 Encrypts the string to a byte array using the MD5 Encryption 
 Algorithm with an additional Salted Hash. 
 <see cref="T:System.Security.Cryptography.MD5CryptoServiceProvider"/>
	</summary>
	<param name="ToEncrypt">System.String. Usually a password.</param>
	<returns>System.Byte[]</returns>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.Encrypt(System.String)">
	<summary>
 Private method to return DES encryption.
 </summary>
	<param name="UnEncryptedValue">String to be encrypted</param>
	<returns>Encrypted string</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.Decrypt(System.String)">
	<summary>
 Private method to perform DES decryption
 </summary>
	<param name="EncryptedValue">DES encrypted string</param>
	<returns>Decrypted DES string</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.EncryptTripleDES(System.String)">
	<summary>
 Private method to perform DES3 encryption
 </summary>
	<param name="EncryptedValue">String to be DES3 encrypted</param>
	<returns>Encrypted string</returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.Common.CryptoUtility.DecryptTripleDES(System.String)">
	<summary>
 Private method to DES3 decryption.
 </summary>
	<param name="EncryptedValue">DES3 encrypted string</param>
	<returns>clear text string</returns>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.Common.CryptoUtility">
	<summary>
 The CryptoUtility is a utility to provide encryption/decryption based on either DES or 
 triple DES methods
 </summary>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.ModelObjects.MSecurityInfo.MayView">
	<summary>
 MayView()--
 This property is calculated relative to the current object that 
 implements ISecurityInfo.  
 When true, user can view the module.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.ModelObjects.MSecurityInfo.MayAdd">
	<summary>
 MayAdd()--
 This property is calculated relative to the current object that 
 implements ISecurityInfo.  
 When true, user can view the module.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.ModelObjects.MSecurityInfo.MayEdit">
	<summary>
 MayEdit()--
 This property is calculated relative to the current object that 
 implements ISecurityInfo.  
 When true, user can view the module.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:GrowthWare.Framework.ModelObjects.MSecurityInfo.MayDelete">
	<summary>
 MayDelete()--
 This property is calculated relative to the current object that 
 implements ISecurityInfo.  
 When true, user can view the module.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MSecurityInfo.#ctor(GrowthWare.Framework.ModelObjects.Base.Interfaces.ISecurityInfo@,System.String[]@)">
	<summary>
 Initializes a new HSecurityInfo object given an object that implements ISecurityInfo.
  All client permissions are calculated relative to the object and the client roles.
 </summary>
	<param name="SecurityInfoObject"></param>
	<param name="AccountRoles"></param>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MSecurityInfo.CheckAuthenticatedPermission(System.String[],System.String[]@)">
	<summary>
 Checks whether an account is in the necessary role for the 4 permissions given an objects roles
 </summary>
	<param name="ObjRoles">String array</param>
	<returns>True/False</returns>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.FunctionType">
	<summary>
 Enumeration of menu types
 </summary>
	<remarks>
 Values match ZF_FUNCTION_TYPES in the database
 </remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.MenuType">
	<summary>
 Enumeration of menu types
 </summary>
	<remarks>
 Values match ZF_NAVIGATION_TYPE in the database
 </remarks>
</member><member name="T:GrowthWare.Framework.Enumerations.RoleType">
	<summary>
 Enumerates all role types.
 </summary>
	<remarks>
 Closely coupled with table ZF_PERMISSIONS.
 </remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MDBInformation">
	<summary>
 Base properties an DB Information Profile
 </summary>
	<remarks>
 Corresponds to table ZF_INFORMATION and 
 Store procedures: 
 ZFP_SET_INFORMATION, ZFP_GET_INFORMATION
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MFunctionProfile.#ctor">
	<summary>
 Will return a Function profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MFunctionProfile.#ctor(System.Data.DataRow,System.Data.DataRow[])">
	<summary>
 Will return a fully populated Function profile.
 </summary>
	<param name="drowProfile">A data row containing the Function information</param>
	<param name="drowSecurity">A data row containing all of the roles</param>
	<remarks></remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MFunctionProfile">
	<summary>
 MFunctionProfile contains properties from the ZF_FUNCTIONS table.
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MNameValuePairDetail.#ctor">
	<summary>
 Provides a new account profile with the default vaules
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MNameValuePairDetail.#ctor(System.Data.DataRow)">
	<summary>
 Will populate values based on the contents of the data row.
 </summary>
	<param name="dr">Datarow containing base values</param>
	<remarks>
 Class should be inherited to extend to your project specific properties
 </remarks>
</member><member name="T:GrowthWare.Framework.ModelObjects.MNameValuePairDetail">
	<summary>
 Base properties a name value pair
 </summary>
	<remarks>
 Corresponds to table ZFC_NVP and 
 Store procedures: 
 ZFP_SET_NVP, ZFP_GET_NVP
 </remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MStateProfile.#ctor">
	<summary>
 Will return an instance populated with default values.
 </summary>
	<remarks></remarks>
</member><member name="M:GrowthWare.Framework.ModelObjects.MStateProfile.#ctor(System.Data.DataRow)">
	<summary>
 Will return an instance populated with information for the data row provided.
 </summary>
	<param name="dr"></param>
	<remarks></remarks>
</member>
</members>
</doc>