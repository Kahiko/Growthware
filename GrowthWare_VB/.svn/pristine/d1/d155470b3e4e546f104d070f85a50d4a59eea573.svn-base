Imports System.Collections.ObjectModel
Imports System.Globalization
Imports System.Web
Imports GrowthWare.Framework.BusinessLogicLayer
Imports GrowthWare.Framework.Web
Imports GrowthWare.Framework.Model.Profiles
Imports GrowthWare.Framework.Web.Controllers

Namespace Utilities
	''' <summary>
	''' FunctionUtility serves as the focal point for any web application needing to utiltize the GrowthWare framework.
	''' Web needs such as caching are handeled here
	''' </summary>
	Public Class FunctionUtility
		Private m_SecurityEntityProfile As MSecurityEntityProfile = Nothing
		Private m_BFunctions As BFunctions = Nothing

		''' <summary>
		''' Constructor sets up the private fields
		''' </summary>
		Public Sub New()
			m_SecurityEntityProfile = SecurityEntityUtility.GetCurrentProfile()
			m_BFunctions = New BFunctions(m_SecurityEntityProfile, WebConfigSettings.CentralManagement)
		End Sub

		''' <summary>
		''' Retrieves all functions from the either the database or cache
		''' </summary>
		''' <returns>A Collection of MFunctinProfiles</returns>
		Public Function GetFunctions() As Collection(Of MFunctionProfile)
			Dim mCacheName As String = m_SecurityEntityProfile.Id.ToString() + "_Functions"
			Dim mFunctionCollection As Collection(Of MFunctionProfile) = Nothing
			mFunctionCollection = CType(HttpContext.Current.Cache(mCacheName), Collection(Of MFunctionProfile))
			If mFunctionCollection Is Nothing Then
				mFunctionCollection = m_BFunctions.GetFunctions(m_SecurityEntityProfile.Id)
				CacheController.AddToCacheDependency(mCacheName, mFunctionCollection)
			End If
			Return mFunctionCollection
		End Function

		''' <summary>
		''' Get a single function given it's action.
		''' </summary>
		''' <param name="action">String</param>
		''' <returns>MFunctionProfile</returns>
		Public Function GetFunction(ByVal action As String) As MFunctionProfile
			Dim mResult = From mProfile In GetFunctions() Where mProfile.Action.ToLower(CultureInfo.CurrentCulture) = action.ToLower(CultureInfo.CurrentCulture) Select mProfile
			Dim mRetVal As MFunctionProfile = mResult.First
			Return mRetVal
		End Function

		''' <summary>
		''' Get a single function given it's id.
		''' </summary>
		''' <param name="id">int or Integer</param>
		''' <returns>MFunctionProfile</returns>
		Public Function GetFunction(ByVal id As Integer) As MFunctionProfile
			Dim mResult = From mProfile In GetFunctions() Where mProfile.Id = id Select mProfile
			Dim mRetVal As MFunctionProfile = mResult.First
			Return mRetVal
		End Function
	End Class
End Namespace
